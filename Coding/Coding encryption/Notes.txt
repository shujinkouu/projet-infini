import base64
import os
from cryptography.fernet import Fernet
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
password = b"password"
salt = os.urandom(16)
kdf = PBKDF2HMAC(
    algorithm=hashes.SHA256(),
    length=32,
    salt=salt,
    iterations=100000,
)
key = base64.urlsafe_b64encode(kdf.derive(password))
f = Fernet(key)
token = f.encrypt(b"Secret message!")
token
b'...'
f.decrypt(token)
b'Secret message!'

#salt = b'b\x9e~\x98N\xbc\xce\xa4\xd5\xa9\xc8\x13+\xfe\x80\xda'

#I tried it 
import base64
import os
from cryptography.fernet import Fernet
from cryptography.hazmat.primitives import hashes
>>> from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
>>> password = b"password"
>>> salt = os.urandom(16)
>>> kdf = PBKDF2HMAC(
...     algorithm=hashes.SHA256(),
...     length=32,
...     salt=salt,
...     iterations=100000,
... )
>>> key = base64.urlsafe_b64encode
>>> key = base64.urlsafe_b64encode(kdf.derive(password))
>>> f = Fernet(key)
>>> token = f.encrypt(b"secret message hi!")
>>> token
b'gAAAAABgPZPjziOZ54MHNaF7kYpW88yKvoY2b8_UDhCQX3aAMthaErVmwA-Ne4w2PI9rYkMlKp-NyOr4jltVTjyXEtstIdKerWOvK_Qwk4J89biqdXg40bs='
>>> f.decrypt(token)
b'secret message hi!'
>>> print(salt)
b'\xcc\xd4\xacT\x91\xcb\xf5\x0f\xbct.\xc5\rX\x93\xb5'

a str can be converted to bytes like so
>>> password = input('what\'s your password?\n')
what's your password?
hi
>>> password.encode('UTF-8')
b'hi'
