C:\Users\Asus>py
Python 3.8.5 (tags/v3.8.5:580fbb0, Jul 20 2020, 15:43:08) [MSC v.1926 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import base64
>>> import os
>>> from cryptography.fernet import Fernet
>>> from cryptography.hazmat.primitives import hashes
>>> from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
>>>
>>> salt = b'\xcc\xd4\xacT\x91\xcb\xf5\x0f\xbct.\xc5\rX\x93\xb5'
>>>
>>> kdf = PBKDF2HMAC(
...     algorithm=hashes.SHA256(),
...     length=32,
...     salt=salt,
...     iterations=100000,
... )
>>> key=base64.urlsafe_b64encode
>>> print(key)
<function urlsafe_b64encode at 0x03BA5A48>
>>> key = base64.urlsafe_b64encode(kdf.derive(b'hi there'))
>>> print(key)
b'xDb-u3bhogRmYyKvcXuiOYNYjz7q0QVC9_tX0-ES7uA='
>>> f = Fernet(key)
>>> d = Fernet(key)
>>> d == f
False
>>> print(d)
<cryptography.fernet.Fernet object at 0x0387E5B0>
>>> print(key)
b'xDb-u3bhogRmYyKvcXuiOYNYjz7q0QVC9_tX0-ES7uA='
>>> secret = b'bonjour Roseanne <3'
>>> token = f.encrypt(secret)
>>> token2 = f.encrypt(secret)
>>> token == token2
False
>>> print(token.decode('UTF-8') + '\n' + token2.decode('UTF-8'))
gAAAAABgPr1EJ-VxvKtujlWuNq3B6weyfTmWPICVVJkocH5EgTngHHwe5NuamoUo_LD-Wtt9O-e8rW9UlkQUlqJBXyhWXmt_oUIupQH7NRSAwuvNG9rERtM=
gAAAAABgPr1N28f3BeXHa0R-H-wUjgoWD-7sIr_DYuG-NHF8qax_91EZuoF0wHiQcI5zwrooraAC4R61WjEU0iZawIGyz7nUSQRx80PctEZjtGhkpKHB4dI=
>>> f.decrypt(token)
b'bonjour Roseanne <3'
>>> f.decrypt(token2)
b'bonjour Roseanne <3'
>>> exit()

C:\Users\Asus>py
Python 3.8.5 (tags/v3.8.5:580fbb0, Jul 20 2020, 15:43:08) [MSC v.1926 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import base64
>>> import os
>>> from cryptography.fernet import Fernet
>>> from cryptography.hazmat.primitives import hashes
>>> from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
>>> salt = b'\xcc\xd4\xacT\x91\xcb\xf5\x0f\xbct.\xc5\rX\x93\xb5'
>>> kdf = PBKDF2HMAC(
...     algorithm=hashes.SHA256(),
...     length=32,
...     salt=salt,
...     iterations=100000,
... )
>>> key=base64.urlsafe_b64encode
>>> key = base64.urlsafe_b64encode(kdf.derive(b'hi there'))
>>> print(key)
b'xDb-u3bhogRmYyKvcXuiOYNYjz7q0QVC9_tX0-ES7uA='
#1st try was:b'xDb-u3bhogRmYyKvcXuiOYNYjz7q0QVC9_tX0-ES7uA='
>>> f = Fernet(key)
>>> token = b'gAAAAABgPr1EJ-VxvKtujlWuNq3B6weyfTmWPICVVJkocH5EgTngHHwe5NuamoUo_LD-Wtt9O-e8rW9UlkQUlqJBXyhWXmt_oUIupQH7NRSAwuvNG9rERtM='
>>> token2 = b'gAAAAABgPr1N28f3BeXHa0R-H-wUjgoWD-7sIr_DYuG-NHF8qax_91EZuoF0wHiQcI5zwrooraAC4R61WjEU0iZawIGyz7nUSQRx80PctEZjtGhkpKHB4dI='
>>> decryptedtoken = f.decrypt(token)
>>> print(decryptedtoken)
b'bonjour Roseanne <3'
>>> decryptedtoken = f.decrypt(token2)
>>> print(decryptedtoken)
b'bonjour Roseanne <3'